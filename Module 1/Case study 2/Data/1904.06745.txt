The noise sensitivity of a Boolean function $f: \{0,1\}^n \rightarrow \{0,1\}$ is one of its fundamental properties. A function of a positive noise parameter $δ$, it is denoted as $NS_δ[f]$. Here we study the algorithmic problem of approximating it for monotone $f$, such that $NS_δ[f] \geq 1/n^{C}$ for constant $C$, and where $δ$ satisfies $1/n \leq δ\leq 1/2$. For such $f$ and $δ$, we give a randomized algorithm performing $O\left(\frac{\min(1,\sqrt{n} δ\log^{1.5} n) }{NS_δ[f]} \text{poly}\left(\frac{1}ε\right)\right)$ queries and approximating $NS_δ[f]$ to within a multiplicative factor of $(1\pm ε)$. Given the same constraints on $f$ and $δ$, we also prove a lower bound of $Ω\left(\frac{\min(1,\sqrt{n} δ)}{NS_δ[f] \cdot n^ξ}\right)$ on the query complexity of any algorithm that approximates $NS_δ[f]$ to within any constant factor, where $ξ$ can be any positive constant. Thus, our algorithm's query complexity is close to optimal in terms of its dependence on $n$.
  We introduce a novel descending-ascending view of noise sensitivity, and use it as a central tool for the analysis of our algorithm. To prove lower bounds on query complexity, we develop a technique that reduces computational questions about query complexity to combinatorial questions about the existence of "thin" functions with certain properties. The existence of such "thin" functions is proved using the probabilistic method. These techniques also yield previously unknown lower bounds on the query complexity of approximating other fundamental properties of Boolean functions: the total influence and the bias.
